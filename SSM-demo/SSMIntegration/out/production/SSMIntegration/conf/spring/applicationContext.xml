<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <!--Spring除了控制器不要，剩下的业务逻辑组件都要,包括dao，service-->
    <context:component-scan base-package="com.atck">
        <!--扫描排除不写use-default-filters="false"-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--1、配数据源-->
    <context:property-placeholder location="classpath:dbconfig.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.jdbcurl}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>


    <!--配置jdbctemplate操作数据库：pass-->
    <!--2、配置使用mybatis配置数据库-->
    <!--可以根据配置文件得到SqlSessionFactory-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定配置文件位置-->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>

        <!--指定xml映射文件的位置-->
<!--        <property name="mapperLocations" value="classpath:mybatis/mapper"/>-->
    </bean>
    <!--我们要把每一个接口的实现加入到ioc容器中-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        &lt;!&ndash;指定DAO接口所在的包&ndash;&gt;
        <property name="basePackage" value="com.atck.dao"/>
    </bean>-->
    <mybatis-spring:scan base-package="com.atck.dao"/>



    <!--3、配置事务控制，配置事务管理器，让它控制住数据源里面的连接-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!--4、基于xml配置，配置事务，哪些方法切入事务还要写切入点表达式-->
    <aop:config>
        <!--配置切入点表达式-->
        <aop:pointcut id="txPoint" expression="execution(* com.atck.service.*.*(..))"/>
        <aop:advisor advice-ref="mytx" pointcut-ref="txPoint"/>
    </aop:config>

    <!--5、配置事务增强-->
    <tx:advice id="mytx" transaction-manager="transactionManager">
        <!--配置事务属性-->
        <tx:attributes>
            <!--            <tx:method name="*" rollback-for="java.lang.Exception"/>-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>




</beans>